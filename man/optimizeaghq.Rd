% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{optimizeaghq}
\alias{optimizeaghq}
\title{Fit an AGHQ model via L-BFGS optimization}
\usage{
optimizeaghq(theta, u, y, X, Z, nn, ww, control)
}
\arguments{
\item{theta}{Starting value for the outer parameter, containing regression
coefficients and variance components on the log-Cholesky scale.}

\item{u}{Starting value for the inner parameter, representing the mode of the
random effects vector.}

\item{y}{A \code{std::vector} of length \code{m} \code{Eigen} vectors of lengths \code{m_i},
containing the responses: one vector of within-group observations per group.}

\item{X}{A \code{std::vector} of length \code{m} \code{Eigen} matrices of dimensions \code{m_i x p},
representing the design matrices for the fixed effects variables.}

\item{Z}{A \code{std::vector} of length \code{m} \code{Eigen} matrices of dimensions \code{m_i x d},
representing the design matrices for the random effects.}

\item{nn}{An \code{Eigen} matrix of dimension \code{k^d x d} containing the product-rule quadrature nodes.}

\item{ww}{An \code{Eigen} vector of length \code{k^d} containing the product-rule quadrature weights.}

\item{control}{a \code{List} containing control arguments.}
}
\description{
This function is a C++ implementation of the exact gradient-based optimization
of the AGHQ approximate log-marginal likelihood in a binary mixed model.
}
